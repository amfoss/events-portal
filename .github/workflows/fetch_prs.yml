name: Fetch PR Data

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to update'
        default: 'hacktoberfest-25'

jobs:
  fetch_pr_data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: hacktoberfest-25
          persist-credentials: true

      
      - name: Fetch PR data
        run: |
          mkdir -p content
          
          # Fetch all PRs
          prs=$(curl -s -L "https://api.github.com/repos/Iron-56/First-issue/pulls?state=all")
          
          # Process each PR and fetch README if it exists
          echo "$prs" | jq -c '.[]' | while read -r pr; do
            pr_number=$(echo "$pr" | jq -r '.number')
            pr_head_sha=$(echo "$pr" | jq -r '.head.sha')
            
            # Check if README.md was modified in this PR
            readme_content=""
            files=$(curl -s -L "https://api.github.com/repos/Iron-56/First-issue/pulls/$pr_number/files")
            readme_modified=$(echo "$files" | jq -r '.[] | select(.filename == "README.md") | .filename')
            
            if [ ! -z "$readme_modified" ]; then
              # Fetch README.md content from the PR branch
              readme_response=$(curl -s -L "https://api.github.com/repos/Iron-56/First-issue/contents/README.md?ref=$pr_head_sha")
              readme_content=$(echo "$readme_response" | jq -r '.content // empty' | base64 -d 2>/dev/null || echo "")
            fi
            
            # Add README content to PR data
            echo "$pr" | jq --arg readme "$readme_content" '. + {readme_content: $readme}' >> /tmp/prs_with_readme.json
          done
          
          # Combine all PRs into final JSON array
          jq -s '[.[] | {
            id: .id,
            number: .number,
            title: .title,
            state: .state,
            user: {
              login: .user.login,
              avatar_url: .user.avatar_url
            },
            created_at: .created_at,
            merged_at: .merged_at,
            body: .body,
            labels: [.labels[] | {name: .name}],
            html_url: .html_url,
            readme_content: .readme_content
          }]' /tmp/prs_with_readme.json > content/pr_data.json
          
          echo "Saved PR data to content/pr_data.json"
      
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add content/pr_data.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Update PR data"
          git push
      
      - name: Upload PR data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-data
          path: content/
          retention-days: 7